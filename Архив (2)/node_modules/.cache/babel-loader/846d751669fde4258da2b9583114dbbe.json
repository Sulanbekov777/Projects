{"ast":null,"code":"import { useState, useEffect } from \"react\";\nimport { url as _url } from './url';\nimport Axios from \"axios\";\nexport const useCustomFetch = ({\n  method = \"GET\",\n  url = _url,\n  headers = {},\n  data = null\n}) => {\n  const [_data, setData] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  useEffect(() => {\n    Axios({\n      method,\n      url,\n      data,\n      headers\n    }).then(resp => {\n      setData(resp);\n    }).catch(error => {\n      setError(error);\n    }).finally(() => {\n      setLoading(false);\n    });\n  }, []);\n  return {\n    data: _data,\n    loading,\n    error\n  };\n};","map":{"version":3,"sources":["C:/Users/User/Desktop/Архив (2)/src/helpers/customFetch.js"],"names":["useState","useEffect","url","_url","Axios","useCustomFetch","method","headers","data","_data","setData","loading","setLoading","error","setError","then","resp","catch","finally"],"mappings":"AAAA,SAASA,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;AACA,SAAQC,GAAG,IAAIC,IAAf,QAA0B,OAA1B;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAEA,OAAO,MAAMC,cAAc,GAAG,CAAC;AAC3BC,EAAAA,MAAM,GAAC,KADoB;AAE3BJ,EAAAA,GAAG,GAACC,IAFuB;AAG3BI,EAAAA,OAAO,GAAC,EAHmB;AAI3BC,EAAAA,IAAI,GAAC;AAJsB,CAAD,KAK1B;AACA,QAAM,CAACC,KAAD,EAAQC,OAAR,IAAmBV,QAAQ,CAAC,IAAD,CAAjC;AACA,QAAM,CAACW,OAAD,EAAUC,UAAV,IAAwBZ,QAAQ,CAAC,IAAD,CAAtC;AACA,QAAM,CAACa,KAAD,EAAQC,QAAR,IAAoBd,QAAQ,CAAC,IAAD,CAAlC;AACAC,EAAAA,SAAS,CAAC,MAAI;AACVG,IAAAA,KAAK,CAAC;AACFE,MAAAA,MADE;AAEFJ,MAAAA,GAFE;AAGFM,MAAAA,IAHE;AAIFD,MAAAA;AAJE,KAAD,CAAL,CAKGQ,IALH,CAKQC,IAAI,IAAG;AACXN,MAAAA,OAAO,CAACM,IAAD,CAAP;AACH,KAPD,EAOGC,KAPH,CAOSJ,KAAK,IAAE;AACZC,MAAAA,QAAQ,CAACD,KAAD,CAAR;AACH,KATD,EASGK,OATH,CASW,MAAI;AACXN,MAAAA,UAAU,CAAC,KAAD,CAAV;AACH,KAXD;AAYH,GAbQ,EAaP,EAbO,CAAT;AAeA,SAAO;AACHJ,IAAAA,IAAI,EAAEC,KADH;AAEHE,IAAAA,OAFG;AAGHE,IAAAA;AAHG,GAAP;AAKH,CA7BM","sourcesContent":["import { useState, useEffect } from \"react\"\r\nimport {url as _url} from './url'\r\nimport Axios from \"axios\";\r\n\r\nexport const useCustomFetch = ({\r\n    method=\"GET\", \r\n    url=_url, \r\n    headers={},\r\n    data=null\r\n})=>{\r\n    const [_data, setData] = useState(null);\r\n    const [loading, setLoading] = useState(true);\r\n    const [error, setError] = useState(null);\r\n    useEffect(()=>{\r\n        Axios({\r\n            method,\r\n            url,\r\n            data,\r\n            headers\r\n        }).then(resp =>{\r\n            setData(resp);\r\n        }).catch(error=>{\r\n            setError(error);\r\n        }).finally(()=>{\r\n            setLoading(false);\r\n        })\r\n    },[])\r\n\r\n    return {\r\n        data: _data,\r\n        loading,\r\n        error\r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}